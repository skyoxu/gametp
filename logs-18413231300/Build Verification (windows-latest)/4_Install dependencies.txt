2025-10-10T17:10:52.0123702Z Prepare all required actions
2025-10-10T17:10:52.0198703Z ##[group]Run ./.github/actions/npm-install
2025-10-10T17:10:52.0198958Z with:
2025-10-10T17:10:52.0199117Z   working-directory: .
2025-10-10T17:10:52.0199308Z   node-version: 20.x
2025-10-10T17:10:52.0199475Z env:
2025-10-10T17:10:52.0199631Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:10:52.0199856Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:10:52.0200039Z   SENTRY_DSN: 
2025-10-10T17:10:52.0200201Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:10:52.0200403Z   CL: /std:c++20 /EHsc
2025-10-10T17:10:52.0200587Z   CXXFLAGS: -std=c++20
2025-10-10T17:10:52.0200767Z   NODE_ENV: development
2025-10-10T17:10:52.0200948Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:10:52.0201142Z ##[endgroup]
2025-10-10T17:10:52.0389628Z ##[group]Run Write-Host "Validating Node.js environment setup..."
2025-10-10T17:10:52.0390085Z [36;1mWrite-Host "Validating Node.js environment setup..."[0m
2025-10-10T17:10:52.0390714Z [36;1mif (-not (Get-Command node -ErrorAction SilentlyContinue)) {[0m
2025-10-10T17:10:52.0391169Z [36;1m  Write-Error "Node.js not found. Ensure actions/setup-node has run."[0m
2025-10-10T17:10:52.0391484Z [36;1m  exit 1[0m
2025-10-10T17:10:52.0391649Z [36;1m}[0m
2025-10-10T17:10:52.0391890Z [36;1mif (-not (Get-Command npm -ErrorAction SilentlyContinue)) {[0m
2025-10-10T17:10:52.0392280Z [36;1m  Write-Error "npm not found. Node.js installation may be incomplete."[0m
2025-10-10T17:10:52.0392595Z [36;1m  exit 1[0m
2025-10-10T17:10:52.0392763Z [36;1m}[0m
2025-10-10T17:10:52.0392994Z [36;1mWrite-Host ("Node.js version: {0}" -f (node --version))[0m
2025-10-10T17:10:52.0393341Z [36;1mWrite-Host ("npm version: {0}" -f (npm --version))[0m
2025-10-10T17:10:52.1351180Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:10:52.1351697Z env:
2025-10-10T17:10:52.1351951Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:10:52.1352320Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:10:52.1352623Z   SENTRY_DSN: 
2025-10-10T17:10:52.1353310Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:10:52.1353688Z   CL: /std:c++20 /EHsc
2025-10-10T17:10:52.1353971Z   CXXFLAGS: -std=c++20
2025-10-10T17:10:52.1354250Z   NODE_ENV: development
2025-10-10T17:10:52.1354554Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:10:52.1354870Z ##[endgroup]
2025-10-10T17:11:01.5337288Z Validating Node.js environment setup...
2025-10-10T17:11:01.6083157Z Node.js version: v20.19.5
2025-10-10T17:11:01.8846616Z npm warn config production Use `--omit=dev` instead.
2025-10-10T17:11:01.8977440Z npm version: 10.8.2
2025-10-10T17:11:02.3845711Z ##[group]Run Write-Host "Validating critical environment variables..."
2025-10-10T17:11:02.3846175Z [36;1mWrite-Host "Validating critical environment variables..."[0m
2025-10-10T17:11:02.3846579Z [36;1mWrite-Host ("NODE_ENV: {0}" -f ($env:NODE_ENV ?? 'not set'))[0m
2025-10-10T17:11:02.3847044Z [36;1mWrite-Host ("NPM_CONFIG_PRODUCTION: {0}" -f ($env:NPM_CONFIG_PRODUCTION ?? 'not set'))[0m
2025-10-10T17:11:02.3847600Z [36;1mif ($env:NODE_ENV -ne 'development' -or $env:NPM_CONFIG_PRODUCTION -ne 'false') {[0m
2025-10-10T17:11:02.3848328Z [36;1m  Write-Warning "Environment vars may prevent devDependencies installation. Recommended: NODE_ENV=development, NPM_CONFIG_PRODUCTION=false"[0m
2025-10-10T17:11:02.3848923Z [36;1m}[0m
2025-10-10T17:11:02.3911915Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:11:02.3912269Z env:
2025-10-10T17:11:02.3912447Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:11:02.3912690Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:11:02.3912892Z   SENTRY_DSN: 
2025-10-10T17:11:02.3913079Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:11:02.3913293Z   CL: /std:c++20 /EHsc
2025-10-10T17:11:02.3913486Z   CXXFLAGS: -std=c++20
2025-10-10T17:11:02.3913689Z   NODE_ENV: development
2025-10-10T17:11:02.3913892Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:11:02.3914110Z ##[endgroup]
2025-10-10T17:11:02.7490534Z Validating critical environment variables...
2025-10-10T17:11:02.7502687Z NODE_ENV: development
2025-10-10T17:11:02.7581493Z NPM_CONFIG_PRODUCTION: false
2025-10-10T17:11:02.8545425Z ##[group]Run Write-Host "Starting Windows-focused npm installation..."
2025-10-10T17:11:02.8545951Z [36;1mWrite-Host "Starting Windows-focused npm installation..."[0m
2025-10-10T17:11:02.8546320Z [36;1mWrite-Host ("Runner: {0}" -f $env:RUNNER_OS)[0m
2025-10-10T17:11:02.8546652Z [36;1mWrite-Host "Current npm configuration (subset):"[0m
2025-10-10T17:11:02.8547685Z [36;1mtry { npm config list | Select-String -Pattern 'fetch-retries|registry|fund|audit' -SimpleMatch | ForEach-Object { $_.Line } } catch {}[0m
2025-10-10T17:11:02.8548270Z [36;1m[0m
2025-10-10T17:11:02.8548469Z [36;1m# ESM-friendly npm environment variables[0m
2025-10-10T17:11:02.8548739Z [36;1m$env:NPM_CONFIG_MAXSOCKETS = '8'[0m
2025-10-10T17:11:02.8548981Z [36;1m$env:NPM_CONFIG_FUND = 'false'[0m
2025-10-10T17:11:02.8549403Z [36;1m$env:NPM_CONFIG_AUDIT = 'false'[0m
2025-10-10T17:11:02.8549644Z [36;1m$env:NPM_CONFIG_PROGRESS = 'false'[0m
2025-10-10T17:11:02.8549860Z [36;1m[0m
2025-10-10T17:11:02.8550093Z [36;1m$npmExecutable = (Get-Command npm -ErrorAction Stop).Source[0m
2025-10-10T17:11:02.8550404Z [36;1mif (-not $npmExecutable) {[0m
2025-10-10T17:11:02.8550694Z [36;1m  throw 'npm executable not found on PATH (required for npm ci)'[0m
2025-10-10T17:11:02.8550982Z [36;1m}[0m
2025-10-10T17:11:02.8551117Z [36;1m[0m
2025-10-10T17:11:02.8551371Z [36;1mfunction Invoke-NpmCiAttempt([int]$timeoutSec, [string]$extraArgs) {[0m
2025-10-10T17:11:02.8551782Z [36;1m  $psi = New-Object System.Diagnostics.ProcessStartInfo[0m
2025-10-10T17:11:02.8552084Z [36;1m  $psi.FileName = $npmExecutable[0m
2025-10-10T17:11:02.8552350Z [36;1m  $psi.WorkingDirectory = (Get-Location).Path[0m
2025-10-10T17:11:02.8552619Z [36;1m  $psi.Arguments = "ci $extraArgs"[0m
2025-10-10T17:11:02.8552876Z [36;1m  $psi.RedirectStandardOutput = $true[0m
2025-10-10T17:11:02.8553150Z [36;1m  $psi.RedirectStandardError = $true[0m
2025-10-10T17:11:02.8553393Z [36;1m  $psi.UseShellExecute = $false[0m
2025-10-10T17:11:02.8553624Z [36;1m  $psi.CreateNoWindow = $true[0m
2025-10-10T17:11:02.8553890Z [36;1m  $proc = New-Object System.Diagnostics.Process[0m
2025-10-10T17:11:02.8554156Z [36;1m  $proc.StartInfo = $psi[0m
2025-10-10T17:11:02.8554364Z [36;1m  [void]$proc.Start()[0m
2025-10-10T17:11:02.8554616Z [36;1m  $completed = $proc.WaitForExit($timeoutSec * 1000)[0m
2025-10-10T17:11:02.8555029Z [36;1m  $out = $proc.StandardOutput.ReadToEnd()[0m
2025-10-10T17:11:02.8555322Z [36;1m  $err = $proc.StandardError.ReadToEnd()[0m
2025-10-10T17:11:02.8555675Z [36;1m  ($out + $err) | Out-File -FilePath npm_install.log -Append -Encoding UTF8[0m
2025-10-10T17:11:02.8556322Z [36;1m  if (-not $completed) { try { Stop-Process -Id $proc.Id -Force -ErrorAction SilentlyContinue } catch {}; return @{ Ok=$false; TimedOut=$true; Code=-1 } }[0m
2025-10-10T17:11:02.8556964Z [36;1m  return @{ Ok = ($proc.ExitCode -eq 0); TimedOut=$false; Code=$proc.ExitCode }[0m
2025-10-10T17:11:02.8557280Z [36;1m}[0m
2025-10-10T17:11:02.8557419Z [36;1m[0m
2025-10-10T17:11:02.8557564Z [36;1m$attempts = @([0m
2025-10-10T17:11:02.8557757Z [36;1m  @{ Timeout=480; Args='' },[0m
2025-10-10T17:11:02.8557993Z [36;1m  @{ Timeout=720; Args='--maxsockets=5' },[0m
2025-10-10T17:11:02.8558252Z [36;1m  @{ Timeout=900; Args='--maxsockets=1' },[0m
2025-10-10T17:11:02.8558481Z [36;1m  @{ Timeout=900; Args='' }[0m
2025-10-10T17:11:02.8558673Z [36;1m)[0m
2025-10-10T17:11:02.8558813Z [36;1m[0m
2025-10-10T17:11:02.8558960Z [36;1m$success = $false[0m
2025-10-10T17:11:02.8559190Z [36;1mfor ($i=0; $i -lt $attempts.Count; $i++) {[0m
2025-10-10T17:11:02.8559431Z [36;1m  $a = $attempts[$i][0m
2025-10-10T17:11:02.8559750Z [36;1m  Write-Host ("Attempt {0} (timeout={1}s args='{2}')" -f ($i+1), $a.Timeout, $a.Args)[0m
2025-10-10T17:11:02.8560202Z [36;1m  $res = Invoke-NpmCiAttempt -timeoutSec $a.Timeout -extraArgs $a.Args[0m
2025-10-10T17:11:02.8561288Z [36;1m  if ($res.Ok) { $success = $true; break } else {[0m
2025-10-10T17:11:02.8561571Z [36;1m    if ($i -lt ($attempts.Count-1)) {[0m
2025-10-10T17:11:02.8561818Z [36;1m      $sleep = 15 * ($i+1)[0m
2025-10-10T17:11:02.8562285Z [36;1m      Write-Warning ("Attempt {0} failed (code={1}, timeout={2}). Sleeping {3}s before retry..." -f ($i+1), $res.Code, $res.TimedOut, $sleep)[0m
2025-10-10T17:11:02.8562765Z [36;1m      Start-Sleep -Seconds $sleep[0m
2025-10-10T17:11:02.8562986Z [36;1m    }[0m
2025-10-10T17:11:02.8563138Z [36;1m  }[0m
2025-10-10T17:11:02.8563274Z [36;1m}[0m
2025-10-10T17:11:02.8563411Z [36;1m[0m
2025-10-10T17:11:02.8563556Z [36;1mif (-not $success) {[0m
2025-10-10T17:11:02.8563868Z [36;1m  Write-Error "CRITICAL FAILURE: All Windows installation attempts failed!"[0m
2025-10-10T17:11:02.8564348Z [36;1m  if (Test-Path npm_install.log) { Get-Content npm_install.log -Tail 80 | Write-Host }[0m
2025-10-10T17:11:02.8565207Z [36;1m  exit 1[0m
2025-10-10T17:11:02.8565364Z [36;1m}[0m
2025-10-10T17:11:02.8565503Z [36;1m[0m
2025-10-10T17:11:02.8565680Z [36;1mWrite-Host "SUCCESS: npm ci completed"[0m
2025-10-10T17:11:02.8565906Z [36;1m[0m
2025-10-10T17:11:02.8566043Z [36;1m# Verification[0m
2025-10-10T17:11:02.8566234Z [36;1m$verificationErrors = 0[0m
2025-10-10T17:11:02.8566505Z [36;1m$tools = @('eslint','tsc','vitest','playwright','tsx')[0m
2025-10-10T17:11:02.8566771Z [36;1mforeach ($t in $tools) {[0m
2025-10-10T17:11:02.8567015Z [36;1m  $binPath = Join-Path 'node_modules/.bin' $t[0m
2025-10-10T17:11:02.8567693Z [36;1m  $binCmdPath = Join-Path 'node_modules/.bin' ("{0}.cmd" -f $t)[0m
2025-10-10T17:11:02.8568031Z [36;1m  $hasTool = Test-Path $binPath[0m
2025-10-10T17:11:02.8568249Z [36;1m  if (-not $hasTool) {[0m
2025-10-10T17:11:02.8568475Z [36;1m    $hasTool = Test-Path $binCmdPath[0m
2025-10-10T17:11:02.8568697Z [36;1m  }[0m
2025-10-10T17:11:02.8568853Z [36;1m  if ($hasTool) {[0m
2025-10-10T17:11:02.8569128Z [36;1m    Write-Host ("SUCCESS: {0} available in node_modules/.bin" -f $t)[0m
2025-10-10T17:11:02.8569467Z [36;1m  } elseif ((npm list $t | Out-Null) -ne $true) {[0m
2025-10-10T17:11:02.8569788Z [36;1m    Write-Warning ("{0} not detected in node_modules" -f $t)[0m
2025-10-10T17:11:02.8570076Z [36;1m    $verificationErrors++[0m
2025-10-10T17:11:02.8570274Z [36;1m  }[0m
2025-10-10T17:11:02.8570413Z [36;1m}[0m
2025-10-10T17:11:02.8570538Z [36;1m[0m
2025-10-10T17:11:02.8570787Z [36;1mWrite-Host "Verifying Rollup native platform package for Windows..."[0m
2025-10-10T17:11:02.8571182Z [36;1mnode -e "require('@rollup/rollup-win32-x64-msvc')" 2>$null[0m
2025-10-10T17:11:02.8571741Z [36;1mif ($LASTEXITCODE -eq 0) { Write-Host "SUCCESS: rollup native ok" } else { Write-Warning "rollup native package not found (non-critical)" }[0m
2025-10-10T17:11:02.8572232Z [36;1m[0m
2025-10-10T17:11:02.8572421Z [36;1m$hasNodeModules = Test-Path 'node_modules'[0m
2025-10-10T17:11:02.8572726Z [36;1m$hasNodeModulesBin = Test-Path 'node_modules/.bin'[0m
2025-10-10T17:11:02.8573037Z [36;1mif ($hasNodeModules -and $hasNodeModulesBin) {[0m
2025-10-10T17:11:02.8573418Z [36;1m  $pkgCount = (Get-ChildItem 'node_modules' -Directory | Measure-Object).Count[0m
2025-10-10T17:11:02.8573939Z [36;1m  Write-Host ("SUCCESS: node_modules verification passed ({0} top-level packages)" -f $pkgCount)[0m
2025-10-10T17:11:02.8574325Z [36;1m} else {[0m
2025-10-10T17:11:02.8574576Z [36;1m  Write-Error 'node_modules structure verification failed'[0m
2025-10-10T17:11:02.8574864Z [36;1m  $verificationErrors++[0m
2025-10-10T17:11:02.8575067Z [36;1m}[0m
2025-10-10T17:11:02.8575208Z [36;1m[0m
2025-10-10T17:11:02.8575335Z [36;1mtry {[0m
2025-10-10T17:11:02.8575561Z [36;1m  $pkg = Get-Content package.json -Raw | ConvertFrom-Json[0m
2025-10-10T17:11:02.8576001Z [36;1m  if ($pkg.type -eq 'module') { Write-Host 'SUCCESS: ESM module system verification passed' }[0m
2025-10-10T17:11:02.8576498Z [36;1m} catch {}[0m
2025-10-10T17:11:02.8576654Z [36;1m[0m
2025-10-10T17:11:02.8577053Z [36;1mif ($verificationErrors -gt 0) { Write-Warning ("Found {0} verification issues (non-blocking)" -f $verificationErrors) }[0m
2025-10-10T17:11:02.8636433Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:11:02.8636743Z env:
2025-10-10T17:11:02.8636902Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:11:02.8637116Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:11:02.8637301Z   SENTRY_DSN: 
2025-10-10T17:11:02.8637470Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:11:02.8637661Z   CL: /std:c++20 /EHsc
2025-10-10T17:11:02.8637834Z   CXXFLAGS: -std=c++20
2025-10-10T17:11:02.8638003Z   NODE_ENV: development
2025-10-10T17:11:02.8638180Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:11:02.8638375Z ##[endgroup]
2025-10-10T17:11:03.3127608Z Starting Windows-focused npm installation...
2025-10-10T17:11:03.3136695Z Runner: Windows
2025-10-10T17:11:03.3143928Z Current npm configuration (subset):
2025-10-10T17:11:03.5997921Z npm warn config production Use `--omit=dev` instead.
2025-10-10T17:11:03.7035004Z Attempt 1 (timeout=480s args='')
2025-10-10T17:17:53.3641551Z SUCCESS: npm ci completed
2025-10-10T17:17:53.3759824Z SUCCESS: eslint available in node_modules/.bin
2025-10-10T17:17:53.3771202Z SUCCESS: tsc available in node_modules/.bin
2025-10-10T17:17:53.3783601Z SUCCESS: vitest available in node_modules/.bin
2025-10-10T17:17:53.4258401Z SUCCESS: playwright available in node_modules/.bin
2025-10-10T17:17:53.4268399Z SUCCESS: tsx available in node_modules/.bin
2025-10-10T17:17:53.4275138Z Verifying Rollup native platform package for Windows...
2025-10-10T17:17:53.4816847Z SUCCESS: rollup native ok
2025-10-10T17:17:53.5347747Z SUCCESS: node_modules verification passed (1171 top-level packages)
2025-10-10T17:17:53.5685302Z SUCCESS: ESM module system verification passed
