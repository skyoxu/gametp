2025-10-10T17:06:37.9621600Z Prepare all required actions
2025-10-10T17:06:37.9693032Z ##[group]Run ./.github/actions/npm-install
2025-10-10T17:06:37.9693417Z with:
2025-10-10T17:06:37.9693677Z   working-directory: .
2025-10-10T17:06:37.9693920Z   node-version: 20.x
2025-10-10T17:06:37.9694127Z env:
2025-10-10T17:06:37.9694331Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:06:37.9694617Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:06:37.9694846Z   SENTRY_DSN: 
2025-10-10T17:06:37.9695059Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:06:37.9695303Z   CL: /std:c++20 /EHsc
2025-10-10T17:06:37.9695530Z   CXXFLAGS: -std=c++20
2025-10-10T17:06:37.9695761Z   NODE_ENV: development
2025-10-10T17:06:37.9696008Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:06:37.9696275Z ##[endgroup]
2025-10-10T17:06:37.9816555Z ##[group]Run Write-Host "Validating Node.js environment setup..."
2025-10-10T17:06:37.9816986Z [36;1mWrite-Host "Validating Node.js environment setup..."[0m
2025-10-10T17:06:37.9817373Z [36;1mif (-not (Get-Command node -ErrorAction SilentlyContinue)) {[0m
2025-10-10T17:06:37.9817829Z [36;1m  Write-Error "Node.js not found. Ensure actions/setup-node has run."[0m
2025-10-10T17:06:37.9818149Z [36;1m  exit 1[0m
2025-10-10T17:06:37.9818318Z [36;1m}[0m
2025-10-10T17:06:37.9818701Z [36;1mif (-not (Get-Command npm -ErrorAction SilentlyContinue)) {[0m
2025-10-10T17:06:37.9819317Z [36;1m  Write-Error "npm not found. Node.js installation may be incomplete."[0m
2025-10-10T17:06:37.9819664Z [36;1m  exit 1[0m
2025-10-10T17:06:37.9819838Z [36;1m}[0m
2025-10-10T17:06:37.9820075Z [36;1mWrite-Host ("Node.js version: {0}" -f (node --version))[0m
2025-10-10T17:06:37.9820437Z [36;1mWrite-Host ("npm version: {0}" -f (npm --version))[0m
2025-10-10T17:06:37.9884730Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:06:37.9885452Z env:
2025-10-10T17:06:37.9885642Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:06:37.9885886Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:06:37.9886081Z   SENTRY_DSN: 
2025-10-10T17:06:37.9886267Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:06:37.9886474Z   CL: /std:c++20 /EHsc
2025-10-10T17:06:37.9886664Z   CXXFLAGS: -std=c++20
2025-10-10T17:06:37.9886852Z   NODE_ENV: development
2025-10-10T17:06:37.9887053Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:06:37.9887259Z ##[endgroup]
2025-10-10T17:06:38.9856095Z Validating Node.js environment setup...
2025-10-10T17:06:39.0442968Z Node.js version: v20.19.5
2025-10-10T17:06:39.3450818Z npm warn config production Use `--omit=dev` instead.
2025-10-10T17:06:39.3598678Z npm version: 10.8.2
2025-10-10T17:06:39.4499268Z ##[group]Run Write-Host "Validating critical environment variables..."
2025-10-10T17:06:39.4499788Z [36;1mWrite-Host "Validating critical environment variables..."[0m
2025-10-10T17:06:39.4500250Z [36;1mWrite-Host ("NODE_ENV: {0}" -f ($env:NODE_ENV ?? 'not set'))[0m
2025-10-10T17:06:39.4500739Z [36;1mWrite-Host ("NPM_CONFIG_PRODUCTION: {0}" -f ($env:NPM_CONFIG_PRODUCTION ?? 'not set'))[0m
2025-10-10T17:06:39.4501307Z [36;1mif ($env:NODE_ENV -ne 'development' -or $env:NPM_CONFIG_PRODUCTION -ne 'false') {[0m
2025-10-10T17:06:39.4502097Z [36;1m  Write-Warning "Environment vars may prevent devDependencies installation. Recommended: NODE_ENV=development, NPM_CONFIG_PRODUCTION=false"[0m
2025-10-10T17:06:39.4502711Z [36;1m}[0m
2025-10-10T17:06:39.4564409Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:06:39.4564774Z env:
2025-10-10T17:06:39.4564958Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:06:39.4565211Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:06:39.4565417Z   SENTRY_DSN: 
2025-10-10T17:06:39.4565607Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:06:39.4566038Z   CL: /std:c++20 /EHsc
2025-10-10T17:06:39.4566230Z   CXXFLAGS: -std=c++20
2025-10-10T17:06:39.4566430Z   NODE_ENV: development
2025-10-10T17:06:39.4566643Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:06:39.4566863Z ##[endgroup]
2025-10-10T17:06:39.7730295Z Validating critical environment variables...
2025-10-10T17:06:39.7741780Z NODE_ENV: development
2025-10-10T17:06:39.8066023Z NPM_CONFIG_PRODUCTION: false
2025-10-10T17:06:39.9002419Z ##[group]Run Write-Host "Starting Windows-focused npm installation..."
2025-10-10T17:06:39.9002971Z [36;1mWrite-Host "Starting Windows-focused npm installation..."[0m
2025-10-10T17:06:39.9003350Z [36;1mWrite-Host ("Runner: {0}" -f $env:RUNNER_OS)[0m
2025-10-10T17:06:39.9003687Z [36;1mWrite-Host "Current npm configuration (subset):"[0m
2025-10-10T17:06:39.9004297Z [36;1mtry { npm config list | Select-String -Pattern 'fetch-retries|registry|fund|audit' -SimpleMatch | ForEach-Object { $_.Line } } catch {}[0m
2025-10-10T17:06:39.9004849Z [36;1m[0m
2025-10-10T17:06:39.9005051Z [36;1m# ESM-friendly npm environment variables[0m
2025-10-10T17:06:39.9005336Z [36;1m$env:NPM_CONFIG_MAXSOCKETS = '8'[0m
2025-10-10T17:06:39.9005598Z [36;1m$env:NPM_CONFIG_FUND = 'false'[0m
2025-10-10T17:06:39.9005848Z [36;1m$env:NPM_CONFIG_AUDIT = 'false'[0m
2025-10-10T17:06:39.9006118Z [36;1m$env:NPM_CONFIG_PROGRESS = 'false'[0m
2025-10-10T17:06:39.9006359Z [36;1m[0m
2025-10-10T17:06:39.9006610Z [36;1m$npmExecutable = (Get-Command npm -ErrorAction Stop).Source[0m
2025-10-10T17:06:39.9006943Z [36;1mif (-not $npmExecutable) {[0m
2025-10-10T17:06:39.9007270Z [36;1m  throw 'npm executable not found on PATH (required for npm ci)'[0m
2025-10-10T17:06:39.9007579Z [36;1m}[0m
2025-10-10T17:06:39.9007739Z [36;1m[0m
2025-10-10T17:06:39.9008022Z [36;1mfunction Invoke-NpmCiAttempt([int]$timeoutSec, [string]$extraArgs) {[0m
2025-10-10T17:06:39.9008457Z [36;1m  $psi = New-Object System.Diagnostics.ProcessStartInfo[0m
2025-10-10T17:06:39.9008776Z [36;1m  $psi.FileName = $npmExecutable[0m
2025-10-10T17:06:39.9009065Z [36;1m  $psi.WorkingDirectory = (Get-Location).Path[0m
2025-10-10T17:06:39.9009358Z [36;1m  $psi.Arguments = "ci $extraArgs"[0m
2025-10-10T17:06:39.9009638Z [36;1m  $psi.RedirectStandardOutput = $true[0m
2025-10-10T17:06:39.9009927Z [36;1m  $psi.RedirectStandardError = $true[0m
2025-10-10T17:06:39.9010195Z [36;1m  $psi.UseShellExecute = $false[0m
2025-10-10T17:06:39.9010444Z [36;1m  $psi.CreateNoWindow = $true[0m
2025-10-10T17:06:39.9010721Z [36;1m  $proc = New-Object System.Diagnostics.Process[0m
2025-10-10T17:06:39.9011008Z [36;1m  $proc.StartInfo = $psi[0m
2025-10-10T17:06:39.9011244Z [36;1m  [void]$proc.Start()[0m
2025-10-10T17:06:39.9011520Z [36;1m  $completed = $proc.WaitForExit($timeoutSec * 1000)[0m
2025-10-10T17:06:39.9011846Z [36;1m  $out = $proc.StandardOutput.ReadToEnd()[0m
2025-10-10T17:06:39.9012146Z [36;1m  $err = $proc.StandardError.ReadToEnd()[0m
2025-10-10T17:06:39.9012520Z [36;1m  ($out + $err) | Out-File -FilePath npm_install.log -Append -Encoding UTF8[0m
2025-10-10T17:06:39.9013203Z [36;1m  if (-not $completed) { try { Stop-Process -Id $proc.Id -Force -ErrorAction SilentlyContinue } catch {}; return @{ Ok=$false; TimedOut=$true; Code=-1 } }[0m
2025-10-10T17:06:39.9013879Z [36;1m  return @{ Ok = ($proc.ExitCode -eq 0); TimedOut=$false; Code=$proc.ExitCode }[0m
2025-10-10T17:06:39.9014218Z [36;1m}[0m
2025-10-10T17:06:39.9014379Z [36;1m[0m
2025-10-10T17:06:39.9014541Z [36;1m$attempts = @([0m
2025-10-10T17:06:39.9014751Z [36;1m  @{ Timeout=480; Args='' },[0m
2025-10-10T17:06:39.9015017Z [36;1m  @{ Timeout=720; Args='--maxsockets=5' },[0m
2025-10-10T17:06:39.9015284Z [36;1m  @{ Timeout=900; Args='--maxsockets=1' },[0m
2025-10-10T17:06:39.9015539Z [36;1m  @{ Timeout=900; Args='' }[0m
2025-10-10T17:06:39.9015760Z [36;1m)[0m
2025-10-10T17:06:39.9015920Z [36;1m[0m
2025-10-10T17:06:39.9016081Z [36;1m$success = $false[0m
2025-10-10T17:06:39.9016501Z [36;1mfor ($i=0; $i -lt $attempts.Count; $i++) {[0m
2025-10-10T17:06:39.9016760Z [36;1m  $a = $attempts[$i][0m
2025-10-10T17:06:39.9017130Z [36;1m  Write-Host ("Attempt {0} (timeout={1}s args='{2}')" -f ($i+1), $a.Timeout, $a.Args)[0m
2025-10-10T17:06:39.9017600Z [36;1m  $res = Invoke-NpmCiAttempt -timeoutSec $a.Timeout -extraArgs $a.Args[0m
2025-10-10T17:06:39.9018747Z [36;1m  if ($res.Ok) { $success = $true; break } else {[0m
2025-10-10T17:06:39.9019055Z [36;1m    if ($i -lt ($attempts.Count-1)) {[0m
2025-10-10T17:06:39.9019332Z [36;1m      $sleep = 15 * ($i+1)[0m
2025-10-10T17:06:39.9019875Z [36;1m      Write-Warning ("Attempt {0} failed (code={1}, timeout={2}). Sleeping {3}s before retry..." -f ($i+1), $res.Code, $res.TimedOut, $sleep)[0m
2025-10-10T17:06:39.9020800Z [36;1m      Start-Sleep -Seconds $sleep[0m
2025-10-10T17:06:39.9021051Z [36;1m    }[0m
2025-10-10T17:06:39.9021221Z [36;1m  }[0m
2025-10-10T17:06:39.9021382Z [36;1m}[0m
2025-10-10T17:06:39.9021552Z [36;1m[0m
2025-10-10T17:06:39.9021720Z [36;1mif (-not $success) {[0m
2025-10-10T17:06:39.9022065Z [36;1m  Write-Error "CRITICAL FAILURE: All Windows installation attempts failed!"[0m
2025-10-10T17:06:39.9022582Z [36;1m  if (Test-Path npm_install.log) { Get-Content npm_install.log -Tail 80 | Write-Host }[0m
2025-10-10T17:06:39.9022969Z [36;1m  exit 1[0m
2025-10-10T17:06:39.9023152Z [36;1m}[0m
2025-10-10T17:06:39.9023316Z [36;1m[0m
2025-10-10T17:06:39.9023515Z [36;1mWrite-Host "SUCCESS: npm ci completed"[0m
2025-10-10T17:06:39.9023768Z [36;1m[0m
2025-10-10T17:06:39.9023920Z [36;1m# Verification[0m
2025-10-10T17:06:39.9024134Z [36;1m$verificationErrors = 0[0m
2025-10-10T17:06:39.9024425Z [36;1m$tools = @('eslint','tsc','vitest','playwright','tsx')[0m
2025-10-10T17:06:39.9024720Z [36;1mforeach ($t in $tools) {[0m
2025-10-10T17:06:39.9024992Z [36;1m  $binPath = Join-Path 'node_modules/.bin' $t[0m
2025-10-10T17:06:39.9025344Z [36;1m  $binCmdPath = Join-Path 'node_modules/.bin' ("{0}.cmd" -f $t)[0m
2025-10-10T17:06:39.9025675Z [36;1m  $hasTool = Test-Path $binPath[0m
2025-10-10T17:06:39.9025920Z [36;1m  if (-not $hasTool) {[0m
2025-10-10T17:06:39.9026162Z [36;1m    $hasTool = Test-Path $binCmdPath[0m
2025-10-10T17:06:39.9026402Z [36;1m  }[0m
2025-10-10T17:06:39.9026579Z [36;1m  if ($hasTool) {[0m
2025-10-10T17:06:39.9026871Z [36;1m    Write-Host ("SUCCESS: {0} available in node_modules/.bin" -f $t)[0m
2025-10-10T17:06:39.9027234Z [36;1m  } elseif ((npm list $t | Out-Null) -ne $true) {[0m
2025-10-10T17:06:39.9027578Z [36;1m    Write-Warning ("{0} not detected in node_modules" -f $t)[0m
2025-10-10T17:06:39.9027895Z [36;1m    $verificationErrors++[0m
2025-10-10T17:06:39.9028118Z [36;1m  }[0m
2025-10-10T17:06:39.9028280Z [36;1m}[0m
2025-10-10T17:06:39.9028442Z [36;1m[0m
2025-10-10T17:06:39.9028721Z [36;1mWrite-Host "Verifying Rollup native platform package for Windows..."[0m
2025-10-10T17:06:39.9029145Z [36;1mnode -e "require('@rollup/rollup-win32-x64-msvc')" 2>$null[0m
2025-10-10T17:06:39.9029752Z [36;1mif ($LASTEXITCODE -eq 0) { Write-Host "SUCCESS: rollup native ok" } else { Write-Warning "rollup native package not found (non-critical)" }[0m
2025-10-10T17:06:39.9030260Z [36;1m[0m
2025-10-10T17:06:39.9030462Z [36;1m$hasNodeModules = Test-Path 'node_modules'[0m
2025-10-10T17:06:39.9030799Z [36;1m$hasNodeModulesBin = Test-Path 'node_modules/.bin'[0m
2025-10-10T17:06:39.9031138Z [36;1mif ($hasNodeModules -and $hasNodeModulesBin) {[0m
2025-10-10T17:06:39.9031541Z [36;1m  $pkgCount = (Get-ChildItem 'node_modules' -Directory | Measure-Object).Count[0m
2025-10-10T17:06:39.9032092Z [36;1m  Write-Host ("SUCCESS: node_modules verification passed ({0} top-level packages)" -f $pkgCount)[0m
2025-10-10T17:06:39.9032497Z [36;1m} else {[0m
2025-10-10T17:06:39.9032751Z [36;1m  Write-Error 'node_modules structure verification failed'[0m
2025-10-10T17:06:39.9033057Z [36;1m  $verificationErrors++[0m
2025-10-10T17:06:39.9033277Z [36;1m}[0m
2025-10-10T17:06:39.9033606Z [36;1m[0m
2025-10-10T17:06:39.9033764Z [36;1mtry {[0m
2025-10-10T17:06:39.9034017Z [36;1m  $pkg = Get-Content package.json -Raw | ConvertFrom-Json[0m
2025-10-10T17:06:39.9034470Z [36;1m  if ($pkg.type -eq 'module') { Write-Host 'SUCCESS: ESM module system verification passed' }[0m
2025-10-10T17:06:39.9034956Z [36;1m} catch {}[0m
2025-10-10T17:06:39.9035141Z [36;1m[0m
2025-10-10T17:06:39.9035565Z [36;1mif ($verificationErrors -gt 0) { Write-Warning ("Found {0} verification issues (non-blocking)" -f $verificationErrors) }[0m
2025-10-10T17:06:39.9097631Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T17:06:39.9097969Z env:
2025-10-10T17:06:39.9098152Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T17:06:39.9099051Z   COVERAGE_THRESHOLD: 90
2025-10-10T17:06:39.9099300Z   SENTRY_DSN: 
2025-10-10T17:06:39.9099484Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T17:06:39.9099698Z   CL: /std:c++20 /EHsc
2025-10-10T17:06:39.9099908Z   CXXFLAGS: -std=c++20
2025-10-10T17:06:39.9100103Z   NODE_ENV: development
2025-10-10T17:06:39.9100304Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T17:06:39.9100516Z ##[endgroup]
2025-10-10T17:06:40.3289447Z Starting Windows-focused npm installation...
2025-10-10T17:06:40.3298359Z Runner: Windows
2025-10-10T17:06:40.3303960Z Current npm configuration (subset):
2025-10-10T17:06:40.6282609Z npm warn config production Use `--omit=dev` instead.
2025-10-10T17:06:40.7567565Z Attempt 1 (timeout=480s args='')
2025-10-10T17:07:49.2872204Z SUCCESS: npm ci completed
2025-10-10T17:07:49.2989639Z SUCCESS: eslint available in node_modules/.bin
2025-10-10T17:07:49.3001697Z SUCCESS: tsc available in node_modules/.bin
2025-10-10T17:07:49.3013186Z SUCCESS: vitest available in node_modules/.bin
2025-10-10T17:07:49.3026194Z SUCCESS: playwright available in node_modules/.bin
2025-10-10T17:07:49.3789359Z SUCCESS: tsx available in node_modules/.bin
2025-10-10T17:07:49.3796000Z Verifying Rollup native platform package for Windows...
2025-10-10T17:07:49.4499860Z SUCCESS: rollup native ok
2025-10-10T17:07:49.5089641Z SUCCESS: node_modules verification passed (1171 top-level packages)
2025-10-10T17:07:49.5345034Z SUCCESS: ESM module system verification passed
