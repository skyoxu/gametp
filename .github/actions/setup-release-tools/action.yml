name: 'Setup Release Tools'
description: '统一安装Release流程需要的工具（Sentry CLI, jq等）'

inputs:
  sentry-token:
    description: 'Sentry认证token'
    required: false
  skip-sentry:
    description: '跳过Sentry CLI安装'
    required: false
    default: 'false'

outputs:
  sentry-version:
    description: '已安装的Sentry CLI版本'
    value: ${{ steps.sentry.outputs.version }}
  tools-ready:
    description: '工具安装是否就绪'
    value: ${{ steps.validate.outputs.ready }}

runs:
  using: 'composite'
  steps:
    - name: 🔍 检查工具缓存
      id: cache
      shell: pwsh
      run: |
        $ready = 'false'
        if (Get-Command jq -ErrorAction SilentlyContinue) {
          Write-Host ("jq already installed: {0}" -f (jq --version))
          $ready = 'true'
        }
        if ('${{ inputs.skip-sentry }}' -ne 'true') {
          try {
            $sver = npx --yes @sentry/cli --version 2>$null | Select-Object -First 1
            if ($sver) {
              Write-Host ("Sentry CLI available: {0}" -f $sver)
              "version=$sver" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding UTF8
            }
          } catch {}
        }
        "ready=$ready" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding UTF8

    - name: 🛠️ 安装jq工具 (Windows)
      shell: pwsh
      if: steps.cache.outputs.ready != 'true'
      run: |
        if (-not (Get-Command jq -ErrorAction SilentlyContinue)) {
          Write-Host "Installing jq tool..."
          if (Get-Command choco -ErrorAction SilentlyContinue) {
            choco install jq -y --no-progress
          } elseif (Get-Command winget -ErrorAction SilentlyContinue) {
            winget install stedolan.jq --accept-source-agreements --accept-package-agreements
          } else {
            Write-Host "Neither chocolatey nor winget available, trying direct download..."
            $tmp = Join-Path $env:TEMP 'jq.exe'
            Invoke-WebRequest -Uri "https://github.com/stedolan/jq/releases/latest/download/jq-win64.exe" -OutFile $tmp
            $dstDir = Join-Path $env:USERPROFILE '.local\bin'
            New-Item -ItemType Directory -Force -Path $dstDir | Out-Null
            Move-Item $tmp (Join-Path $dstDir 'jq.exe') -Force
            $dstDir | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
        } else {
          Write-Host "jq already installed"
        }

    - name: 🔧 验证Sentry CLI
      id: sentry
      shell: pwsh
      if: inputs.skip-sentry != 'true'
      run: |
        Write-Host "Validating Sentry CLI..."
        $sver = $null
        try { $sver = npx --yes @sentry/cli --version 2>$null | Select-Object -First 1 } catch {}
        if (-not $sver) { Write-Warning 'Sentry CLI unavailable, continuing...'; $sver = 'unavailable' }
        "version=$sver" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding UTF8
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry-token }}

    - name: ✅ 工具验证完成
      id: validate
      shell: pwsh
      run: |
        Write-Host "Release tools ready"
        "ready=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding UTF8
