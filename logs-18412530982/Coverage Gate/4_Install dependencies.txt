2025-10-10T16:39:53.9193147Z Prepare all required actions
2025-10-10T16:39:53.9264541Z ##[group]Run ./.github/actions/npm-install
2025-10-10T16:39:53.9264784Z with:
2025-10-10T16:39:53.9264946Z   working-directory: .
2025-10-10T16:39:53.9265132Z   node-version: 20.x
2025-10-10T16:39:53.9265289Z env:
2025-10-10T16:39:53.9265441Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:39:53.9265664Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:39:53.9265881Z   SENTRY_DSN: 
2025-10-10T16:39:53.9266043Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:39:53.9266241Z   CL: /std:c++20 /EHsc
2025-10-10T16:39:53.9266413Z   CXXFLAGS: -std=c++20
2025-10-10T16:39:53.9266582Z   NODE_ENV: development
2025-10-10T16:39:53.9266766Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:39:53.9266965Z ##[endgroup]
2025-10-10T16:39:53.9458644Z ##[group]Run Write-Host "Validating Node.js environment setup..."
2025-10-10T16:39:53.9459124Z [36;1mWrite-Host "Validating Node.js environment setup..."[0m
2025-10-10T16:39:53.9459757Z [36;1mif (-not (Get-Command node -ErrorAction SilentlyContinue)) {[0m
2025-10-10T16:39:53.9460463Z [36;1m  Write-Error "Node.js not found. Ensure actions/setup-node has run."[0m
2025-10-10T16:39:53.9460784Z [36;1m  exit 1[0m
2025-10-10T16:39:53.9460941Z [36;1m}[0m
2025-10-10T16:39:53.9461178Z [36;1mif (-not (Get-Command npm -ErrorAction SilentlyContinue)) {[0m
2025-10-10T16:39:53.9461601Z [36;1m  Write-Error "npm not found. Node.js installation may be incomplete."[0m
2025-10-10T16:39:53.9461916Z [36;1m  exit 1[0m
2025-10-10T16:39:53.9462063Z [36;1m}[0m
2025-10-10T16:39:53.9462288Z [36;1mWrite-Host ("Node.js version: {0}" -f (node --version))[0m
2025-10-10T16:39:53.9462630Z [36;1mWrite-Host ("npm version: {0}" -f (npm --version))[0m
2025-10-10T16:39:54.1642679Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:39:54.1643102Z env:
2025-10-10T16:39:54.1643329Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:39:54.1643627Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:39:54.1643873Z   SENTRY_DSN: 
2025-10-10T16:39:54.1644109Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:39:54.1644359Z   CL: /std:c++20 /EHsc
2025-10-10T16:39:54.1644575Z   CXXFLAGS: -std=c++20
2025-10-10T16:39:54.1644806Z   NODE_ENV: development
2025-10-10T16:39:54.1645048Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:39:54.1645296Z ##[endgroup]
2025-10-10T16:40:19.0008404Z Validating Node.js environment setup...
2025-10-10T16:40:19.1521837Z Node.js version: v20.19.5
2025-10-10T16:40:19.4275557Z npm warn config production Use `--omit=dev` instead.
2025-10-10T16:40:19.4414584Z npm version: 10.8.2
2025-10-10T16:40:21.1842757Z ##[group]Run Write-Host "Validating critical environment variables..."
2025-10-10T16:40:21.1843294Z [36;1mWrite-Host "Validating critical environment variables..."[0m
2025-10-10T16:40:21.1843845Z [36;1mWrite-Host ("NODE_ENV: {0}" -f ($env:NODE_ENV ?? 'not set'))[0m
2025-10-10T16:40:21.1844296Z [36;1mWrite-Host ("NPM_CONFIG_PRODUCTION: {0}" -f ($env:NPM_CONFIG_PRODUCTION ?? 'not set'))[0m
2025-10-10T16:40:21.1845035Z [36;1mif ($env:NODE_ENV -ne 'development' -or $env:NPM_CONFIG_PRODUCTION -ne 'false') {[0m
2025-10-10T16:40:21.1845722Z [36;1m  Write-Warning "Environment vars may prevent devDependencies installation. Recommended: NODE_ENV=development, NPM_CONFIG_PRODUCTION=false"[0m
2025-10-10T16:40:21.1846267Z [36;1m}[0m
2025-10-10T16:40:21.1904489Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:40:21.1904808Z env:
2025-10-10T16:40:21.1904972Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:40:21.1905200Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:40:21.1905383Z   SENTRY_DSN: 
2025-10-10T16:40:21.1905550Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:40:21.1905743Z   CL: /std:c++20 /EHsc
2025-10-10T16:40:21.1905918Z   CXXFLAGS: -std=c++20
2025-10-10T16:40:21.1906098Z   NODE_ENV: development
2025-10-10T16:40:21.1906275Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:40:21.1906475Z ##[endgroup]
2025-10-10T16:40:21.5744491Z Validating critical environment variables...
2025-10-10T16:40:21.5757183Z NODE_ENV: development
2025-10-10T16:40:21.5816300Z NPM_CONFIG_PRODUCTION: false
2025-10-10T16:40:21.6830792Z ##[group]Run Write-Host "Starting Windows-focused npm installation..."
2025-10-10T16:40:21.6831290Z [36;1mWrite-Host "Starting Windows-focused npm installation..."[0m
2025-10-10T16:40:21.6831652Z [36;1mWrite-Host ("Runner: {0}" -f $env:RUNNER_OS)[0m
2025-10-10T16:40:21.6831956Z [36;1mWrite-Host "Current npm configuration (subset):"[0m
2025-10-10T16:40:21.6832539Z [36;1mtry { npm config list | Select-String -Pattern 'fetch-retries|registry|fund|audit' -SimpleMatch | ForEach-Object { $_.Line } } catch {}[0m
2025-10-10T16:40:21.6833077Z [36;1m[0m
2025-10-10T16:40:21.6833264Z [36;1m# ESM-friendly npm environment variables[0m
2025-10-10T16:40:21.6833529Z [36;1m$env:NPM_CONFIG_MAXSOCKETS = '8'[0m
2025-10-10T16:40:21.6833776Z [36;1m$env:NPM_CONFIG_FUND = 'false'[0m
2025-10-10T16:40:21.6834016Z [36;1m$env:NPM_CONFIG_AUDIT = 'false'[0m
2025-10-10T16:40:21.6834443Z [36;1m$env:NPM_CONFIG_PROGRESS = 'false'[0m
2025-10-10T16:40:21.6834664Z [36;1m[0m
2025-10-10T16:40:21.6834910Z [36;1m$npmExecutable = (Get-Command npm -ErrorAction Stop).Source[0m
2025-10-10T16:40:21.6835233Z [36;1mif (-not $npmExecutable) {[0m
2025-10-10T16:40:21.6835531Z [36;1m  throw 'npm executable not found on PATH (required for npm ci)'[0m
2025-10-10T16:40:21.6835836Z [36;1m}[0m
2025-10-10T16:40:21.6835979Z [36;1m[0m
2025-10-10T16:40:21.6836243Z [36;1mfunction Invoke-NpmCiAttempt([int]$timeoutSec, [string]$extraArgs) {[0m
2025-10-10T16:40:21.6836656Z [36;1m  $psi = New-Object System.Diagnostics.ProcessStartInfo[0m
2025-10-10T16:40:21.6836963Z [36;1m  $psi.FileName = $npmExecutable[0m
2025-10-10T16:40:21.6837247Z [36;1m  $psi.WorkingDirectory = (Get-Location).Path[0m
2025-10-10T16:40:21.6837518Z [36;1m  $psi.Arguments = "ci $extraArgs"[0m
2025-10-10T16:40:21.6837780Z [36;1m  $psi.RedirectStandardOutput = $true[0m
2025-10-10T16:40:21.6838061Z [36;1m  $psi.RedirectStandardError = $true[0m
2025-10-10T16:40:21.6838315Z [36;1m  $psi.UseShellExecute = $false[0m
2025-10-10T16:40:21.6838547Z [36;1m  $psi.CreateNoWindow = $true[0m
2025-10-10T16:40:21.6838818Z [36;1m  $proc = New-Object System.Diagnostics.Process[0m
2025-10-10T16:40:21.6839096Z [36;1m  $proc.StartInfo = $psi[0m
2025-10-10T16:40:21.6839308Z [36;1m  [void]$proc.Start()[0m
2025-10-10T16:40:21.6839570Z [36;1m  $completed = $proc.WaitForExit($timeoutSec * 1000)[0m
2025-10-10T16:40:21.6839989Z [36;1m  $out = $proc.StandardOutput.ReadToEnd()[0m
2025-10-10T16:40:21.6840297Z [36;1m  $err = $proc.StandardError.ReadToEnd()[0m
2025-10-10T16:40:21.6840643Z [36;1m  ($out + $err) | Out-File -FilePath npm_install.log -Append -Encoding UTF8[0m
2025-10-10T16:40:21.6841298Z [36;1m  if (-not $completed) { try { Stop-Process -Id $proc.Id -Force -ErrorAction SilentlyContinue } catch {}; return @{ Ok=$false; TimedOut=$true; Code=-1 } }[0m
2025-10-10T16:40:21.6841951Z [36;1m  return @{ Ok = ($proc.ExitCode -eq 0); TimedOut=$false; Code=$proc.ExitCode }[0m
2025-10-10T16:40:21.6842271Z [36;1m}[0m
2025-10-10T16:40:21.6842409Z [36;1m[0m
2025-10-10T16:40:21.6842556Z [36;1m$attempts = @([0m
2025-10-10T16:40:21.6842750Z [36;1m  @{ Timeout=480; Args='' },[0m
2025-10-10T16:40:21.6842987Z [36;1m  @{ Timeout=720; Args='--maxsockets=5' },[0m
2025-10-10T16:40:21.6843250Z [36;1m  @{ Timeout=900; Args='--maxsockets=1' },[0m
2025-10-10T16:40:21.6843489Z [36;1m  @{ Timeout=900; Args='' }[0m
2025-10-10T16:40:21.6843692Z [36;1m)[0m
2025-10-10T16:40:21.6843824Z [36;1m[0m
2025-10-10T16:40:21.6843973Z [36;1m$success = $false[0m
2025-10-10T16:40:21.6844211Z [36;1mfor ($i=0; $i -lt $attempts.Count; $i++) {[0m
2025-10-10T16:40:21.6844448Z [36;1m  $a = $attempts[$i][0m
2025-10-10T16:40:21.6844766Z [36;1m  Write-Host ("Attempt {0} (timeout={1}s args='{2}')" -f ($i+1), $a.Timeout, $a.Args)[0m
2025-10-10T16:40:21.6845218Z [36;1m  $res = Invoke-NpmCiAttempt -timeoutSec $a.Timeout -extraArgs $a.Args[0m
2025-10-10T16:40:21.6846331Z [36;1m  if ($res.Ok) { $success = $true; break } else {[0m
2025-10-10T16:40:21.6846974Z [36;1m    if ($i -lt ($attempts.Count-1)) {[0m
2025-10-10T16:40:21.6847242Z [36;1m      $sleep = 15 * ($i+1)[0m
2025-10-10T16:40:21.6847719Z [36;1m      Write-Warning ("Attempt {0} failed (code={1}, timeout={2}). Sleeping {3}s before retry..." -f ($i+1), $res.Code, $res.TimedOut, $sleep)[0m
2025-10-10T16:40:21.6848217Z [36;1m      Start-Sleep -Seconds $sleep[0m
2025-10-10T16:40:21.6848442Z [36;1m    }[0m
2025-10-10T16:40:21.6848596Z [36;1m  }[0m
2025-10-10T16:40:21.6848735Z [36;1m}[0m
2025-10-10T16:40:21.6848887Z [36;1m[0m
2025-10-10T16:40:21.6849038Z [36;1mif (-not $success) {[0m
2025-10-10T16:40:21.6849362Z [36;1m  Write-Error "CRITICAL FAILURE: All Windows installation attempts failed!"[0m
2025-10-10T16:40:21.6849851Z [36;1m  if (Test-Path npm_install.log) { Get-Content npm_install.log -Tail 80 | Write-Host }[0m
2025-10-10T16:40:21.6850754Z [36;1m  exit 1[0m
2025-10-10T16:40:21.6850912Z [36;1m}[0m
2025-10-10T16:40:21.6851050Z [36;1m[0m
2025-10-10T16:40:21.6851218Z [36;1mWrite-Host "SUCCESS: npm ci completed"[0m
2025-10-10T16:40:21.6851454Z [36;1m[0m
2025-10-10T16:40:21.6851595Z [36;1m# Verification[0m
2025-10-10T16:40:21.6851781Z [36;1m$verificationErrors = 0[0m
2025-10-10T16:40:21.6852046Z [36;1m$tools = @('eslint','tsc','vitest','playwright','tsx')[0m
2025-10-10T16:40:21.6852319Z [36;1mforeach ($t in $tools) {[0m
2025-10-10T16:40:21.6852570Z [36;1m  $binPath = Join-Path 'node_modules/.bin' $t[0m
2025-10-10T16:40:21.6852908Z [36;1m  $binCmdPath = Join-Path 'node_modules/.bin' ("{0}.cmd" -f $t)[0m
2025-10-10T16:40:21.6853232Z [36;1m  $hasTool = Test-Path $binPath[0m
2025-10-10T16:40:21.6853458Z [36;1m  if (-not $hasTool) {[0m
2025-10-10T16:40:21.6853675Z [36;1m    $hasTool = Test-Path $binCmdPath[0m
2025-10-10T16:40:21.6853895Z [36;1m  }[0m
2025-10-10T16:40:21.6854052Z [36;1m  if ($hasTool) {[0m
2025-10-10T16:40:21.6854320Z [36;1m    Write-Host ("SUCCESS: {0} available in node_modules/.bin" -f $t)[0m
2025-10-10T16:40:21.6854656Z [36;1m  } elseif ((npm list $t | Out-Null) -ne $true) {[0m
2025-10-10T16:40:21.6854978Z [36;1m    Write-Warning ("{0} not detected in node_modules" -f $t)[0m
2025-10-10T16:40:21.6855270Z [36;1m    $verificationErrors++[0m
2025-10-10T16:40:21.6855467Z [36;1m  }[0m
2025-10-10T16:40:21.6855607Z [36;1m}[0m
2025-10-10T16:40:21.6855745Z [36;1m[0m
2025-10-10T16:40:21.6855995Z [36;1mWrite-Host "Verifying Rollup native platform package for Windows..."[0m
2025-10-10T16:40:21.6856400Z [36;1mnode -e "require('@rollup/rollup-win32-x64-msvc')" 2>$null[0m
2025-10-10T16:40:21.6856981Z [36;1mif ($LASTEXITCODE -eq 0) { Write-Host "SUCCESS: rollup native ok" } else { Write-Warning "rollup native package not found (non-critical)" }[0m
2025-10-10T16:40:21.6857480Z [36;1m[0m
2025-10-10T16:40:21.6857655Z [36;1m$hasNodeModules = Test-Path 'node_modules'[0m
2025-10-10T16:40:21.6857971Z [36;1m$hasNodeModulesBin = Test-Path 'node_modules/.bin'[0m
2025-10-10T16:40:21.6858290Z [36;1mif ($hasNodeModules -and $hasNodeModulesBin) {[0m
2025-10-10T16:40:21.6858668Z [36;1m  $pkgCount = (Get-ChildItem 'node_modules' -Directory | Measure-Object).Count[0m
2025-10-10T16:40:21.6859191Z [36;1m  Write-Host ("SUCCESS: node_modules verification passed ({0} top-level packages)" -f $pkgCount)[0m
2025-10-10T16:40:21.6859584Z [36;1m} else {[0m
2025-10-10T16:40:21.6859829Z [36;1m  Write-Error 'node_modules structure verification failed'[0m
2025-10-10T16:40:21.6860127Z [36;1m  $verificationErrors++[0m
2025-10-10T16:40:21.6860318Z [36;1m}[0m
2025-10-10T16:40:21.6860453Z [36;1m[0m
2025-10-10T16:40:21.6860588Z [36;1mtry {[0m
2025-10-10T16:40:21.6860806Z [36;1m  $pkg = Get-Content package.json -Raw | ConvertFrom-Json[0m
2025-10-10T16:40:21.6861229Z [36;1m  if ($pkg.type -eq 'module') { Write-Host 'SUCCESS: ESM module system verification passed' }[0m
2025-10-10T16:40:21.6861680Z [36;1m} catch {}[0m
2025-10-10T16:40:21.6861838Z [36;1m[0m
2025-10-10T16:40:21.6862242Z [36;1mif ($verificationErrors -gt 0) { Write-Warning ("Found {0} verification issues (non-blocking)" -f $verificationErrors) }[0m
2025-10-10T16:40:21.6920586Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:40:21.6920900Z env:
2025-10-10T16:40:21.6921062Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:40:21.6921285Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:40:21.6921465Z   SENTRY_DSN: 
2025-10-10T16:40:21.6921632Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:40:21.6921823Z   CL: /std:c++20 /EHsc
2025-10-10T16:40:21.6921999Z   CXXFLAGS: -std=c++20
2025-10-10T16:40:21.6922176Z   NODE_ENV: development
2025-10-10T16:40:21.6922351Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:40:21.6922548Z ##[endgroup]
2025-10-10T16:40:22.4224837Z Starting Windows-focused npm installation...
2025-10-10T16:40:22.4233302Z Runner: Windows
2025-10-10T16:40:22.4240002Z Current npm configuration (subset):
2025-10-10T16:40:22.7061615Z npm warn config production Use `--omit=dev` instead.
2025-10-10T16:40:22.8518501Z Attempt 1 (timeout=480s args='')
2025-10-10T16:41:49.1624194Z SUCCESS: npm ci completed
2025-10-10T16:41:49.1808289Z SUCCESS: eslint available in node_modules/.bin
2025-10-10T16:41:49.1819277Z SUCCESS: tsc available in node_modules/.bin
2025-10-10T16:41:49.1830132Z SUCCESS: vitest available in node_modules/.bin
2025-10-10T16:41:49.2647052Z SUCCESS: playwright available in node_modules/.bin
2025-10-10T16:41:49.2657710Z SUCCESS: tsx available in node_modules/.bin
2025-10-10T16:41:49.2663723Z Verifying Rollup native platform package for Windows...
2025-10-10T16:41:49.3489895Z SUCCESS: rollup native ok
2025-10-10T16:41:49.4330277Z SUCCESS: node_modules verification passed (1171 top-level packages)
2025-10-10T16:41:49.4725754Z SUCCESS: ESM module system verification passed
