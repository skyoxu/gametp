2025-10-10T16:35:54.3188045Z Prepare all required actions
2025-10-10T16:35:54.3302038Z ##[group]Run ./.github/actions/npm-install
2025-10-10T16:35:54.3302318Z with:
2025-10-10T16:35:54.3302474Z   working-directory: .
2025-10-10T16:35:54.3302664Z   node-version: 20.x
2025-10-10T16:35:54.3302830Z env:
2025-10-10T16:35:54.3302986Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:35:54.3303211Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:35:54.3303385Z   SENTRY_DSN: 
2025-10-10T16:35:54.3303560Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:35:54.3303755Z   CL: /std:c++20 /EHsc
2025-10-10T16:35:54.3303921Z   CXXFLAGS: -std=c++20
2025-10-10T16:35:54.3304102Z   NODE_ENV: development
2025-10-10T16:35:54.3304290Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:35:54.3304478Z ##[endgroup]
2025-10-10T16:35:54.3678077Z ##[group]Run Write-Host "Validating Node.js environment setup..."
2025-10-10T16:35:54.3678902Z [36;1mWrite-Host "Validating Node.js environment setup..."[0m
2025-10-10T16:35:54.3679976Z [36;1mif (-not (Get-Command node -ErrorAction SilentlyContinue)) {[0m
2025-10-10T16:35:54.3680781Z [36;1m  Write-Error "Node.js not found. Ensure actions/setup-node has run."[0m
2025-10-10T16:35:54.3681339Z [36;1m  exit 1[0m
2025-10-10T16:35:54.3681601Z [36;1m}[0m
2025-10-10T16:35:54.3682008Z [36;1mif (-not (Get-Command npm -ErrorAction SilentlyContinue)) {[0m
2025-10-10T16:35:54.3682711Z [36;1m  Write-Error "npm not found. Node.js installation may be incomplete."[0m
2025-10-10T16:35:54.3683269Z [36;1m  exit 1[0m
2025-10-10T16:35:54.3683521Z [36;1m}[0m
2025-10-10T16:35:54.3683882Z [36;1mWrite-Host ("Node.js version: {0}" -f (node --version))[0m
2025-10-10T16:35:54.3684488Z [36;1mWrite-Host ("npm version: {0}" -f (npm --version))[0m
2025-10-10T16:35:54.3978465Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:35:54.3979084Z env:
2025-10-10T16:35:54.3979351Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:35:54.3979748Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:35:54.3980201Z   SENTRY_DSN: 
2025-10-10T16:35:54.3980550Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:35:54.3980899Z   CL: /std:c++20 /EHsc
2025-10-10T16:35:54.3981204Z   CXXFLAGS: -std=c++20
2025-10-10T16:35:54.3981499Z   NODE_ENV: development
2025-10-10T16:35:54.3981802Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:35:54.3982558Z ##[endgroup]
2025-10-10T16:35:59.8659986Z Validating Node.js environment setup...
2025-10-10T16:35:59.9433005Z Node.js version: v20.19.5
2025-10-10T16:36:00.2566221Z npm warn config production Use `--omit=dev` instead.
2025-10-10T16:36:00.2707599Z npm version: 10.8.2
2025-10-10T16:36:00.6679305Z ##[group]Run Write-Host "Validating critical environment variables..."
2025-10-10T16:36:00.6679765Z [36;1mWrite-Host "Validating critical environment variables..."[0m
2025-10-10T16:36:00.6680159Z [36;1mWrite-Host ("NODE_ENV: {0}" -f ($env:NODE_ENV ?? 'not set'))[0m
2025-10-10T16:36:00.6680609Z [36;1mWrite-Host ("NPM_CONFIG_PRODUCTION: {0}" -f ($env:NPM_CONFIG_PRODUCTION ?? 'not set'))[0m
2025-10-10T16:36:00.6681140Z [36;1mif ($env:NODE_ENV -ne 'development' -or $env:NPM_CONFIG_PRODUCTION -ne 'false') {[0m
2025-10-10T16:36:00.6681849Z [36;1m  Write-Warning "Environment vars may prevent devDependencies installation. Recommended: NODE_ENV=development, NPM_CONFIG_PRODUCTION=false"[0m
2025-10-10T16:36:00.6682412Z [36;1m}[0m
2025-10-10T16:36:00.6748795Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:36:00.6749133Z env:
2025-10-10T16:36:00.6749300Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:36:00.6749518Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:36:00.6749698Z   SENTRY_DSN: 
2025-10-10T16:36:00.6749865Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:36:00.6750063Z   CL: /std:c++20 /EHsc
2025-10-10T16:36:00.6750238Z   CXXFLAGS: -std=c++20
2025-10-10T16:36:00.6750421Z   NODE_ENV: development
2025-10-10T16:36:00.6750605Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:36:00.6750806Z ##[endgroup]
2025-10-10T16:36:01.0299826Z Validating critical environment variables...
2025-10-10T16:36:01.0310284Z NODE_ENV: development
2025-10-10T16:36:01.0401367Z NPM_CONFIG_PRODUCTION: false
2025-10-10T16:36:01.1476742Z ##[group]Run Write-Host "Starting Windows-focused npm installation..."
2025-10-10T16:36:01.1477299Z [36;1mWrite-Host "Starting Windows-focused npm installation..."[0m
2025-10-10T16:36:01.1477675Z [36;1mWrite-Host ("Runner: {0}" -f $env:RUNNER_OS)[0m
2025-10-10T16:36:01.1478020Z [36;1mWrite-Host "Current npm configuration (subset):"[0m
2025-10-10T16:36:01.1478619Z [36;1mtry { npm config list | Select-String -Pattern 'fetch-retries|registry|fund|audit' -SimpleMatch | ForEach-Object { $_.Line } } catch {}[0m
2025-10-10T16:36:01.1479191Z [36;1m[0m
2025-10-10T16:36:01.1479388Z [36;1m# ESM-friendly npm environment variables[0m
2025-10-10T16:36:01.1479661Z [36;1m$env:NPM_CONFIG_MAXSOCKETS = '8'[0m
2025-10-10T16:36:01.1479900Z [36;1m$env:NPM_CONFIG_FUND = 'false'[0m
2025-10-10T16:36:01.1480371Z [36;1m$env:NPM_CONFIG_AUDIT = 'false'[0m
2025-10-10T16:36:01.1480635Z [36;1m$env:NPM_CONFIG_PROGRESS = 'false'[0m
2025-10-10T16:36:01.1480854Z [36;1m[0m
2025-10-10T16:36:01.1481107Z [36;1m$npmExecutable = (Get-Command npm -ErrorAction Stop).Source[0m
2025-10-10T16:36:01.1481435Z [36;1mif (-not $npmExecutable) {[0m
2025-10-10T16:36:01.1481745Z [36;1m  throw 'npm executable not found on PATH (required for npm ci)'[0m
2025-10-10T16:36:01.1482056Z [36;1m}[0m
2025-10-10T16:36:01.1482200Z [36;1m[0m
2025-10-10T16:36:01.1482474Z [36;1mfunction Invoke-NpmCiAttempt([int]$timeoutSec, [string]$extraArgs) {[0m
2025-10-10T16:36:01.1482897Z [36;1m  $psi = New-Object System.Diagnostics.ProcessStartInfo[0m
2025-10-10T16:36:01.1483214Z [36;1m  $psi.FileName = $npmExecutable[0m
2025-10-10T16:36:01.1483495Z [36;1m  $psi.WorkingDirectory = (Get-Location).Path[0m
2025-10-10T16:36:01.1483771Z [36;1m  $psi.Arguments = "ci $extraArgs"[0m
2025-10-10T16:36:01.1484038Z [36;1m  $psi.RedirectStandardOutput = $true[0m
2025-10-10T16:36:01.1484333Z [36;1m  $psi.RedirectStandardError = $true[0m
2025-10-10T16:36:01.1484594Z [36;1m  $psi.UseShellExecute = $false[0m
2025-10-10T16:36:01.1484835Z [36;1m  $psi.CreateNoWindow = $true[0m
2025-10-10T16:36:01.1485115Z [36;1m  $proc = New-Object System.Diagnostics.Process[0m
2025-10-10T16:36:01.1485393Z [36;1m  $proc.StartInfo = $psi[0m
2025-10-10T16:36:01.1485602Z [36;1m  [void]$proc.Start()[0m
2025-10-10T16:36:01.1486221Z [36;1m  $completed = $proc.WaitForExit($timeoutSec * 1000)[0m
2025-10-10T16:36:01.1486547Z [36;1m  $out = $proc.StandardOutput.ReadToEnd()[0m
2025-10-10T16:36:01.1486843Z [36;1m  $err = $proc.StandardError.ReadToEnd()[0m
2025-10-10T16:36:01.1487199Z [36;1m  ($out + $err) | Out-File -FilePath npm_install.log -Append -Encoding UTF8[0m
2025-10-10T16:36:01.1487867Z [36;1m  if (-not $completed) { try { Stop-Process -Id $proc.Id -Force -ErrorAction SilentlyContinue } catch {}; return @{ Ok=$false; TimedOut=$true; Code=-1 } }[0m
2025-10-10T16:36:01.1488548Z [36;1m  return @{ Ok = ($proc.ExitCode -eq 0); TimedOut=$false; Code=$proc.ExitCode }[0m
2025-10-10T16:36:01.1488888Z [36;1m}[0m
2025-10-10T16:36:01.1489031Z [36;1m[0m
2025-10-10T16:36:01.1489185Z [36;1m$attempts = @([0m
2025-10-10T16:36:01.1489383Z [36;1m  @{ Timeout=480; Args='' },[0m
2025-10-10T16:36:01.1489718Z [36;1m  @{ Timeout=720; Args='--maxsockets=5' },[0m
2025-10-10T16:36:01.1490105Z [36;1m  @{ Timeout=900; Args='--maxsockets=1' },[0m
2025-10-10T16:36:01.1490346Z [36;1m  @{ Timeout=900; Args='' }[0m
2025-10-10T16:36:01.1490541Z [36;1m)[0m
2025-10-10T16:36:01.1490683Z [36;1m[0m
2025-10-10T16:36:01.1490835Z [36;1m$success = $false[0m
2025-10-10T16:36:01.1491060Z [36;1mfor ($i=0; $i -lt $attempts.Count; $i++) {[0m
2025-10-10T16:36:01.1491303Z [36;1m  $a = $attempts[$i][0m
2025-10-10T16:36:01.1491635Z [36;1m  Write-Host ("Attempt {0} (timeout={1}s args='{2}')" -f ($i+1), $a.Timeout, $a.Args)[0m
2025-10-10T16:36:01.1492111Z [36;1m  $res = Invoke-NpmCiAttempt -timeoutSec $a.Timeout -extraArgs $a.Args[0m
2025-10-10T16:36:01.1493468Z [36;1m  if ($res.Ok) { $success = $true; break } else {[0m
2025-10-10T16:36:01.1493761Z [36;1m    if ($i -lt ($attempts.Count-1)) {[0m
2025-10-10T16:36:01.1494015Z [36;1m      $sleep = 15 * ($i+1)[0m
2025-10-10T16:36:01.1494496Z [36;1m      Write-Warning ("Attempt {0} failed (code={1}, timeout={2}). Sleeping {3}s before retry..." -f ($i+1), $res.Code, $res.TimedOut, $sleep)[0m
2025-10-10T16:36:01.1495006Z [36;1m      Start-Sleep -Seconds $sleep[0m
2025-10-10T16:36:01.1495233Z [36;1m    }[0m
2025-10-10T16:36:01.1495384Z [36;1m  }[0m
2025-10-10T16:36:01.1495522Z [36;1m}[0m
2025-10-10T16:36:01.1495666Z [36;1m[0m
2025-10-10T16:36:01.1495824Z [36;1mif (-not $success) {[0m
2025-10-10T16:36:01.1496150Z [36;1m  Write-Error "CRITICAL FAILURE: All Windows installation attempts failed!"[0m
2025-10-10T16:36:01.1496646Z [36;1m  if (Test-Path npm_install.log) { Get-Content npm_install.log -Tail 80 | Write-Host }[0m
2025-10-10T16:36:01.1497675Z [36;1m  exit 1[0m
2025-10-10T16:36:01.1497836Z [36;1m}[0m
2025-10-10T16:36:01.1497975Z [36;1m[0m
2025-10-10T16:36:01.1498162Z [36;1mWrite-Host "SUCCESS: npm ci completed"[0m
2025-10-10T16:36:01.1498513Z [36;1m[0m
2025-10-10T16:36:01.1498672Z [36;1m# Verification[0m
2025-10-10T16:36:01.1498864Z [36;1m$verificationErrors = 0[0m
2025-10-10T16:36:01.1499141Z [36;1m$tools = @('eslint','tsc','vitest','playwright','tsx')[0m
2025-10-10T16:36:01.1499424Z [36;1mforeach ($t in $tools) {[0m
2025-10-10T16:36:01.1499677Z [36;1m  $binPath = Join-Path 'node_modules/.bin' $t[0m
2025-10-10T16:36:01.1500016Z [36;1m  $binCmdPath = Join-Path 'node_modules/.bin' ("{0}.cmd" -f $t)[0m
2025-10-10T16:36:01.1500337Z [36;1m  $hasTool = Test-Path $binPath[0m
2025-10-10T16:36:01.1500588Z [36;1m  if (-not $hasTool) {[0m
2025-10-10T16:36:01.1500813Z [36;1m    $hasTool = Test-Path $binCmdPath[0m
2025-10-10T16:36:01.1501042Z [36;1m  }[0m
2025-10-10T16:36:01.1501221Z [36;1m  if ($hasTool) {[0m
2025-10-10T16:36:01.1501496Z [36;1m    Write-Host ("SUCCESS: {0} available in node_modules/.bin" -f $t)[0m
2025-10-10T16:36:01.1501853Z [36;1m  } elseif ((npm list $t | Out-Null) -ne $true) {[0m
2025-10-10T16:36:01.1502183Z [36;1m    Write-Warning ("{0} not detected in node_modules" -f $t)[0m
2025-10-10T16:36:01.1502480Z [36;1m    $verificationErrors++[0m
2025-10-10T16:36:01.1502676Z [36;1m  }[0m
2025-10-10T16:36:01.1502820Z [36;1m}[0m
2025-10-10T16:36:01.1502959Z [36;1m[0m
2025-10-10T16:36:01.1503210Z [36;1mWrite-Host "Verifying Rollup native platform package for Windows..."[0m
2025-10-10T16:36:01.1503625Z [36;1mnode -e "require('@rollup/rollup-win32-x64-msvc')" 2>$null[0m
2025-10-10T16:36:01.1504210Z [36;1mif ($LASTEXITCODE -eq 0) { Write-Host "SUCCESS: rollup native ok" } else { Write-Warning "rollup native package not found (non-critical)" }[0m
2025-10-10T16:36:01.1504708Z [36;1m[0m
2025-10-10T16:36:01.1504897Z [36;1m$hasNodeModules = Test-Path 'node_modules'[0m
2025-10-10T16:36:01.1505217Z [36;1m$hasNodeModulesBin = Test-Path 'node_modules/.bin'[0m
2025-10-10T16:36:01.1505542Z [36;1mif ($hasNodeModules -and $hasNodeModulesBin) {[0m
2025-10-10T16:36:01.1506191Z [36;1m  $pkgCount = (Get-ChildItem 'node_modules' -Directory | Measure-Object).Count[0m
2025-10-10T16:36:01.1506764Z [36;1m  Write-Host ("SUCCESS: node_modules verification passed ({0} top-level packages)" -f $pkgCount)[0m
2025-10-10T16:36:01.1507169Z [36;1m} else {[0m
2025-10-10T16:36:01.1507411Z [36;1m  Write-Error 'node_modules structure verification failed'[0m
2025-10-10T16:36:01.1507710Z [36;1m  $verificationErrors++[0m
2025-10-10T16:36:01.1507912Z [36;1m}[0m
2025-10-10T16:36:01.1508050Z [36;1m[0m
2025-10-10T16:36:01.1508180Z [36;1mtry {[0m
2025-10-10T16:36:01.1508418Z [36;1m  $pkg = Get-Content package.json -Raw | ConvertFrom-Json[0m
2025-10-10T16:36:01.1508862Z [36;1m  if ($pkg.type -eq 'module') { Write-Host 'SUCCESS: ESM module system verification passed' }[0m
2025-10-10T16:36:01.1509395Z [36;1m} catch {}[0m
2025-10-10T16:36:01.1509560Z [36;1m[0m
2025-10-10T16:36:01.1510171Z [36;1mif ($verificationErrors -gt 0) { Write-Warning ("Found {0} verification issues (non-blocking)" -f $verificationErrors) }[0m
2025-10-10T16:36:01.1588293Z shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
2025-10-10T16:36:01.1588660Z env:
2025-10-10T16:36:01.1588848Z   NODE_VERSION_MATRIX: 18.x, 20.x, 22.x
2025-10-10T16:36:01.1589079Z   COVERAGE_THRESHOLD: 90
2025-10-10T16:36:01.1589258Z   SENTRY_DSN: 
2025-10-10T16:36:01.1589426Z   SENTRY_TRACES_SAMPLE_RATE: 0
2025-10-10T16:36:01.1589626Z   CL: /std:c++20 /EHsc
2025-10-10T16:36:01.1589799Z   CXXFLAGS: -std=c++20
2025-10-10T16:36:01.1589985Z   NODE_ENV: development
2025-10-10T16:36:01.1590174Z   NPM_CONFIG_PRODUCTION: false
2025-10-10T16:36:01.1590375Z ##[endgroup]
2025-10-10T16:36:01.5995117Z Starting Windows-focused npm installation...
2025-10-10T16:36:01.6007702Z Runner: Windows
2025-10-10T16:36:01.6016097Z Current npm configuration (subset):
2025-10-10T16:36:01.9539790Z npm warn config production Use `--omit=dev` instead.
2025-10-10T16:36:02.0567429Z Attempt 1 (timeout=480s args='')
2025-10-10T16:37:24.4979672Z SUCCESS: npm ci completed
2025-10-10T16:37:24.5103073Z SUCCESS: eslint available in node_modules/.bin
2025-10-10T16:37:24.5116756Z SUCCESS: tsc available in node_modules/.bin
2025-10-10T16:37:24.5156216Z SUCCESS: vitest available in node_modules/.bin
2025-10-10T16:37:24.5801541Z SUCCESS: playwright available in node_modules/.bin
2025-10-10T16:37:24.5865799Z SUCCESS: tsx available in node_modules/.bin
2025-10-10T16:37:24.5901208Z Verifying Rollup native platform package for Windows...
2025-10-10T16:37:24.6608940Z SUCCESS: rollup native ok
2025-10-10T16:37:24.7096748Z SUCCESS: node_modules verification passed (1172 top-level packages)
2025-10-10T16:37:24.7319721Z SUCCESS: ESM module system verification passed
